alias gvim="mvim"
alias vi="vim"
alias k="kubectl"
alias kc="kubectl --context"
alias kcs="kubectl --namespace kube-system"
alias updrepo="gfind . -type d -name .git ! -path '*/.terraform/*' -printf 'Updating repository %h\n' -execdir bash -c 'git ls-remote >/dev/null 2>&1 && git up' \;"
alias dirtyrepo="gfind . -type d -name .git -printf '%h: ' -execdir bash -c \"if [[ -z \\\"\\\$(git status --porcelain | tail -n1)\\\" ]]; then echo Clean | color green Clean; else echo Dirty | color red Dirty; fi\" \;"
alias branches="gfind . -type d -name .git -printf 'Repository %h: ' -execdir sh -c \"git branch -l | awk '{\\\$1=\\\$1};1' | sort | paste -d, -s | color red '* [^, ]*' green '* master'\" \;"
alias allbranches="gfind . -type d -name .git  -not -path '*/.terraform/*' -printf 'Repository %h: ' -execdir sh -c \"git branch -a | grep -vE 'origin/ma(ster|in)' | awk '{\\\$1=\\\$1};1' | sort | paste -d, -s | color red '* [^, ]*' green '* master' green '* main'\" \;"
alias stashes="gfind . -type d -name .git -printf 'Repository %h: ' -execdir sh -c \"git stash list | paste -d, -s\" \;"
alias master="gfind . -type d -name .git -printf 'Repository %h:\n' -execdir sh -c \"git checkout master > /dev/null 2>&1\" \;"
alias prune="gfind . -type d -name .git | xargs -I {} zsh -ic \"echo 'Pruning repository {}' && cd {} && gbl | grep '\[gone\]' | sed 's/^\s\+\([^ ]*\).*$/\1/' | xargs -r git branch -d \" \;"
alias format-scala="find src -type d -name scala | xargs scalariform -r -p=.scalariform.conf"
alias gup="git up"
alias hpr="hub pull-request"
alias pr="open 'https://github.com/pulls?user=inteleon'"
alias ips='ifconfig -a | grep -o ''inet6\? \(addr:\)\?\s\?\(\(\([0-9]\+\.\)\{3\}[0-9]\+\)\|[a-fA-F0-9:]\+\)'' | awk ''{ sub(/inet6? (addr:)? ?/, ""); print }'''
alias bup='brew upgrade && for cask in $(brew list --cask); do brew info --cask $cask | head -3 | grep -v "^http" | sed -e "/^$cask: /s/$cask: \([^ ]*\).*$/\1/" -e "/^.*\/$cask/s/\/usr\/local\/Caskroom\/$cask\/\(.*\) (.*)$/\1/" | paste -d " " - - | read current installed && if [[ "$current" != "$installed" ]]; then echo "Upgrading $cask from $installed to $current"; brew upgrade --cask --greedy $cask; else echo "$cask:$current is latest version"; fi; done'
alias vl='vault login -method=github token="$VAULT_GITHUB_TOKEN"'
# Print each PATH entry on a separate line
alias path='echo -e ${PATH//:/\\n}'
alias awslocal="aws --endpoint-url http://localhost:4566"
alias tf="terraform"

