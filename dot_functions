prepend_path() {
    for arg in "$@"; do
        if [[ ":${PATH}:" != *":${arg}:"* ]]; then
            export PATH="${arg}${PATH:+":$PATH"}"
        fi
    done
}

append_path() {
    for arg in "$@"; do
        if [[ ":${PATH}:" != *":${arg}:"* ]]; then
            export PATH="${PATH:+"$PATH:"}${arg}"
        fi
    done
}

function ecr {
    eval $(aws ecr get-login --no-include-email)
}

function reload {
    #exec zsh -l
    source ~/.zshrc
}

lp_add_ssh_key() {
    local file=$1
    local name=$2
    printf "Private Key: %s\nPublic Key: %s" "$(cat $file)" "$(cat $file.pub)" | lpass add --sync=now --non-interactive --note-type=ssh-key $name
}

# AWS SSO
sso() {
    unset AWS_PROFILE
    export AWS_PROFILE=$1
    aws sts get-caller-identity &> /dev/null || aws sso login --profile $1 || (unset AWS_PROFILE && aws-sso-util configure profile --no-credential-process $1)
    aws-export-credentials --credentials-file-profile $1
}

# AWS SSO completion
_sso() {
    local -a completions
    while IFS='\n' read -r comp; do
        if [ -n "$comp" ]; then
            completions+=${comp}
        fi
    done < <(grep '^\[.*\]$' ${AWS_CONFIG_FILE:-~/.aws/config} | sed 's/^\[profile \(.*\)\]$/\1/')
    IFS=\  compadd $(echo $completions[@])
}

compdef _sso sso

# Kind load
kind_load() {
    local DIR=$(pwd)
    while [ ! -z "$DIR" ] && [ ! -f "$DIR/.buildtools.yaml" ]; do
        DIR="${DIR%\/*}"
    done

    if [ -z "${DIR}" ]; then
        echo "No .buildtools.yaml file found"
        return
    fi

    local REGISTRY=$(yq e '.registry.* | .url // .registry' ${DIR}/.buildtools.yaml)
    local CLUSTER=$(basename $(dirname $PWD) | tr '[:upper:]' '[:lower:]')
    local NAME=$(basename $PWD)
    local COMMIT=$(git rev-parse HEAD)

    kind load --name ${CLUSTER} docker-image ${REGISTRY}/${NAME}:${COMMIT}
}

ldeploy() {
    kind_load
    deploy local
}
